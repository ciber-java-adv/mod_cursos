<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
            http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd"
            
       default-lazy-init="true">
    
     <context:component-scan base-package="pe.edu.cibertec.proyectocurso" />
    <context:annotation-config />
    
    <!--
    
    
 
     <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer" id="propertyPlaceholder">
        <property name="locations">
            <list>
                <value>classpath:database.propertie</value>
            </list>
        </property>
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
    </bean>
    
    <bean id="DataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    
      <property name="driverClassName" value="${jdbc.driverClassName}" />
	<property name="url" value="${jdbc.url}" />
	<property name="username" value="${jdbc.username}" />
	<property name="password" value="${jdbc.password}" />
    
    
  </bean>
   
     -->
  
  <!--
    <context:property-placeholder location="classpath:pe/edu/cibertec/proyectocurso/properties/database.properties" />


  <bean id="DataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    
      <property name="driverClassName" value="${jdbc.driverClassName}" />
	<property name="url" value="${jdbc.url}" />
	<property name="username" value="${jdbc.username}" />
	<property name="password" value="${jdbc.password}" />
    
    
  </bean>
  -->
 

 <bean id="DataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
          
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
	<property name="url" value="jdbc:mysql://localhost:3306/bd_curso" />
	<property name="username" value="root" />
	<property name="password" value="mysql" />
           
      
  </bean>


   
 
    
   
    
     <!--
    <bean id="cursoService" class="pe.edu.cibertec.proyectocurso.service.impl.CursoServiceImpl">
        <property name="cursoDao" ref="cursoDao" />
    </bean>
    
    
    <bean id="cursoDao" class="pe.edu.cibertec.proyectocurso.dao.impl.CursoDaoImpl">
        <property name="sessionFactory" ref="SessionFactory" />
    </bean>
    
    -->
    
    
    <!-- Session Factory Declaration -->
    <bean id="SessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="DataSource" />
        <property name="annotatedClasses">
            <list>
                <value>pe.edu.cibertec.proyectocurso.model.Curso</value>
                 <value>pe.edu.cibertec.proyectocurso.model.Auditoria</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
               
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
    </bean>
    
    
    <aop:config>
         <aop:aspect id="aspectoCurso" ref="auditoriaInterceptor" >
            <aop:pointcut id="antesEliminarCursoPuntoCorte" expression="execution(* pe.edu.cibertec.proyectocurso.service.impl.CursoServiceImpl.eliminarCurso(..))"/>
            <aop:before method="antesEliminarCursoInterceptor" pointcut-ref="antesEliminarCursoPuntoCorte" />
        </aop:aspect>
    </aop:config>
 
    
    <!-- Enable the configuration of transactional behavior based on annotations -->
    <tx:annotation-driven transaction-manager="txManager"/>
 
    <!-- Transaction Manager is defined -->
    <bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="SessionFactory"/>
    </bean>
    

 
</beans>
